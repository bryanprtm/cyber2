version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: soc-database
    environment:
      POSTGRES_DB: security_operations_center
      POSTGRES_USER: socuser
      POSTGRES_PASSWORD: SecureSOC2024!
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - soc-network
    restart: unless-stopped

  # Security Operation Center Application
  app:
    build: .
    container_name: soc-application
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://socuser:SecureSOC2024!@postgres:5432/security_operations_center
      PGHOST: postgres
      PGUSER: socuser
      PGPASSWORD: SecureSOC2024!
      PGDATABASE: security_operations_center
      PGPORT: 5432
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - soc-network
    restart: unless-stopped
    volumes:
      - ./logs:/opt/security-operations-center/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: soc-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - soc-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  soc-network:
    driver: bridge